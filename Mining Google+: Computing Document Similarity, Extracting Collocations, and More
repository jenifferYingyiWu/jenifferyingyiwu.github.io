Anyone with a Gmail account can trivially create a Google+ account and start collaborating with friends. From a product standpoint, Google+ has evolved rapidly and used some of the most compelling features of existing social network platforms such as Twitter and Facebook in carving out its own set of unique capabilities. As with the other social websites featured in this book, a full overview of Google+ isn't in scope. The best way to learn is by creating an account and spending some time exploring. For the most part, where there's a feature in the user interface, there's an API that provides that feature that you can tap into. Suffice it to say that Google+ has leveraged tried-and-true features of existing social networks, such as marking content with hashtags and maintaining a profile according to customizable privacy settings, with additional novelties such as a fresh take on content sharing called circles, video chats called hangouts, and extensive integration with other Google services such as Gmail contacts. In Google+ API parlance, social interactions are framed in terms of people, activities, comments, and moments.
The API documentation that's available online is always the definitive source of guidance, but a brief overview may be helpful to get you thinking about how Google+ compares to another platform such as Twitter or Facebook.
4.2.1    Making Google+ API Requests
From a software development standpoint, Google+ leverages OAuth like the rest of the social web to enable an application that you'll build to access data on a user's behalf, so you'll need to register an application to get appropriate credentials for accessing the Google+ platform. The Google API Console provides a means of registering an application (called a project in the Google API console) to get OAuth credentials but allow exposes an API key that you can use for “simple API access”. This API key is what we'll use in this 
Each activity object follows a three-tuple pattern of the form (actor, verb, object). In this post, the tuple tells us that this particular item in the results is a note, which is essentially just a status update with some textual content. A closer look at the result reverals that the content is something that 
4.3    A Whiz-Bang Introduction to TF-IDF
Although rigorous approaches to natural language processing (NLP) that include such things as sentence segmentation, tokenization, word chunking, and entity detection are necessary in order to achiever  deepest possible understanding of textual data, its' helpful to first introduce some fundamentals from information retrieval theory. The remainder introduces some of its more foundational aspects, including TF-IDF, the cosine similarity metric, and some of the theory behind collocation detection.
4.4.3    Finding Similar Documents
Once you've queried and discovered documents of interest, one of the next things you might want to do is find similar documents. Whereas TF-IDF can provide the means to narrow down a corpus based on search terms, cosine similarity is one of the most common techniques for comparing documents to one another, which is the essence of finding a similar document. An understanding of cosine similarity requires a brief introduction to vector space models, which is the topic of the next section.
Although it's virtually impossible to do this subject justice in a short section, it's important to have a basic understanding of vector space models if you have any interest at all in text mining or the IR field. If you're not interested in the background theory and want to jump straight into implementation details on good faith, feel free to skip ahead to the next section.
